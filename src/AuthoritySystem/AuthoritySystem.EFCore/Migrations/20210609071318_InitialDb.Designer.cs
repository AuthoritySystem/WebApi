// <auto-generated />
using System;
using AuthoritySystem.EFCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AuthoritySystem.EFCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210609071318_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AuthoritySystem.Model.Entity.TB_Department", b =>
                {
                    b.Property<int>("ClusterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("创建用户");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("部门名称");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("备注信息");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<int>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("是否删除 0：未删除 1：删除");

                    b.Property<Guid?>("ParentID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("更新时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("更新用户");

                    b.HasKey("ClusterID");

                    b.ToTable("TB_Department");

                    b
                        .HasComment("部门表");

                    b.HasData(
                        new
                        {
                            ClusterID = 1,
                            CreateTime = new DateTime(2021, 6, 9, 15, 13, 17, 724, DateTimeKind.Local).AddTicks(2329),
                            CreateUser = "系统管理员",
                            DepartmentName = "系统维护部",
                            ID = new Guid("bfd0c4fb-1279-437f-9654-063c1d7deb71"),
                            IsDeleted = 0,
                            UpdateTime = new DateTime(2021, 6, 9, 15, 13, 17, 724, DateTimeKind.Local).AddTicks(2900),
                            UpdateUser = "系统管理员"
                        });
                });

            modelBuilder.Entity("AuthoritySystem.Model.Entity.TB_Menu", b =>
                {
                    b.Property<int>("ClusterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("类名");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("创建用户");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("备注信息");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<int>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("是否删除 0：未删除 1：删除");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("菜单名称");

                    b.Property<string>("NameSpace")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("命名空间");

                    b.Property<Guid?>("ParentID")
                        .HasColumnType("uuid")
                        .HasComment("父级菜单ID");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("更新时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("更新用户");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasComment("dll文件名称");

                    b.HasKey("ClusterID");

                    b.ToTable("TB_Menu");

                    b
                        .HasComment("菜单表");
                });

            modelBuilder.Entity("AuthoritySystem.Model.Entity.TB_Role", b =>
                {
                    b.Property<int>("ClusterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("创建用户");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("备注信息");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<int>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("是否删除 0：未删除 1：删除");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("角色名称");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("更新时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("更新用户");

                    b.HasKey("ClusterID");

                    b.ToTable("TB_Role");

                    b
                        .HasComment("角色表");

                    b.HasData(
                        new
                        {
                            ClusterID = 1,
                            CreateTime = new DateTime(2021, 6, 9, 15, 13, 17, 725, DateTimeKind.Local).AddTicks(9544),
                            CreateUser = "系统管理员",
                            ID = new Guid("f0cc7f21-0ed2-42c4-bd4a-a95110140efa"),
                            IsDeleted = 0,
                            RoleName = "系统管理员",
                            UpdateTime = new DateTime(2021, 6, 9, 15, 13, 17, 725, DateTimeKind.Local).AddTicks(9545),
                            UpdateUser = "系统管理员"
                        });
                });

            modelBuilder.Entity("AuthoritySystem.Model.Entity.TB_RoleMenu", b =>
                {
                    b.Property<int>("ClusterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("创建用户");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("备注信息");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<int>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("是否删除 0：未删除 1：删除");

                    b.Property<Guid>("MenuID")
                        .HasColumnType("uuid")
                        .HasComment("菜单ID");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("uuid")
                        .HasComment("角色ID");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("更新时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("更新用户");

                    b.HasKey("ClusterID");

                    b.ToTable("TB_RoleMenu");

                    b
                        .HasComment("角色菜单表");

                    b.HasData(
                        new
                        {
                            ClusterID = 1,
                            CreateTime = new DateTime(2021, 6, 9, 15, 13, 17, 726, DateTimeKind.Local).AddTicks(6735),
                            CreateUser = "系统管理员",
                            ID = new Guid("8a5d9b31-86ea-48f1-807c-81716dd291df"),
                            IsDeleted = 0,
                            MenuID = new Guid("f358f4c0-a044-45a6-85ec-d38830909105"),
                            RoleID = new Guid("f0cc7f21-0ed2-42c4-bd4a-a95110140efa"),
                            UpdateTime = new DateTime(2021, 6, 9, 15, 13, 17, 726, DateTimeKind.Local).AddTicks(6736),
                            UpdateUser = "系统管理员"
                        });
                });

            modelBuilder.Entity("AuthoritySystem.Model.Entity.TB_User", b =>
                {
                    b.Property<int>("ClusterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("创建时间");

                    b.Property<string>("CreateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("创建用户");

                    b.Property<Guid?>("DepartmentID")
                        .HasColumnType("uuid")
                        .HasComment("部门ID");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasComment("备注信息");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasComment("邮箱地址");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<int>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("是否删除 0：未删除 1：删除");

                    b.Property<int>("LoginErrorCount")
                        .HasColumnType("integer")
                        .HasComment("错误登录次数");

                    b.Property<string>("LoginID")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("用户账号");

                    b.Property<DateTime?>("LoginTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasComment("手机号码");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("姓名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("密码");

                    b.Property<string>("Position")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasComment("职务");

                    b.Property<Guid?>("RoleID")
                        .HasColumnType("uuid")
                        .HasComment("角色ID");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasComment("用户状态 0：正常 1 冻结 2：注销 默认0");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("timestamp without time zone")
                        .HasComment("更新时间");

                    b.Property<string>("UpdateUser")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasComment("更新用户");

                    b.HasKey("ClusterID");

                    b.ToTable("TB_User");

                    b
                        .HasComment("用户表");

                    b.HasData(
                        new
                        {
                            ClusterID = 1,
                            CreateTime = new DateTime(2021, 6, 9, 15, 13, 17, 726, DateTimeKind.Local).AddTicks(1316),
                            CreateUser = "系统管理员",
                            DepartmentID = new Guid("bfd0c4fb-1279-437f-9654-063c1d7deb71"),
                            ID = new Guid("936e5d10-071d-41a1-86a9-da1d0907626e"),
                            IsDeleted = 0,
                            LoginErrorCount = 0,
                            LoginID = "admin",
                            Name = "系统管理员",
                            Password = "e10adc3949ba59abbe56e057f20f883e",
                            RoleID = new Guid("f0cc7f21-0ed2-42c4-bd4a-a95110140efa"),
                            Status = 0,
                            UpdateTime = new DateTime(2021, 6, 9, 15, 13, 17, 726, DateTimeKind.Local).AddTicks(1318),
                            UpdateUser = "系统管理员"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
